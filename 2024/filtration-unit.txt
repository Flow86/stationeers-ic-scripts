# Chip for a Filtration Unit
# written by Flow86
#
# Will reduce power usage
# Can detect Small or Heavy filters
# No medium!

define cHashFilterPollutant 1915566057
define cHashFilterPollutantH 1959564765
define cHashFilterCarbonDioxide 1635000764
define cHashFilterCarbonDioxideH 1876847024
define cHashFilterNitrogen 632853248
define cHashFilterNitrogenH -1387439451
define cHashFilterOxygen -721824748
define cHashFilterOxygenH -1217998945
define cHashFilterVolatiles 15011598
define cHashFilterVolatilesH 1255156286
define cHashFilterNitrousOxide -1247674305
define cHashFilterNitrousOxideH 465267979

define cMinRatio 0.001  # %
define cMinPressure 100 # Pa

alias dPump1 d0
alias dPump2 d1
alias dFiltration db

alias rPump1 r0
alias rPump2 r1
alias rMode r2
alias rPressureOutput r3
alias rRatio r4
alias rFilter0 r5
alias rFilter1 r6

init:
move rPump1 1
move rPump2 1
move rMode 0
jal update_state

start:
l rPressureOutput dFiltration PressureOutput
sgt rPump1 rPressureOutput cMinPressure
l rPressureOutput dFiltration PressureOutput2
sgtz rPump2 rPressureOutput

ls rFilter0 dFiltration 0 OccupantHash
ls rFilter1 dFiltration 1 OccupantHash

# check filter1 if filter0 was empty
or rFilter0 rFilter0 rFilter1

move rRatio 0

# Pollutant
brne rFilter0 cHashFilterPollutant 2
l rRatio dFiltration RatioPollutantInput
brne rFilter0 cHashFilterPollutantH 2
l rRatio dFiltration RatioPollutantInput

# CarbonDioxide
brne rFilter0 cHashFilterCarbonDioxide 2
l rRatio dFiltration RatioCarbonDioxideInput
brne rFilter0 cHashFilterCarbonDioxideH 2
l rRatio dFiltration RatioCarbonDioxideInput

# Nitrogen
brne rFilter0 cHashFilterNitrogen 2
l rRatio dFiltration RatioNitrogenInput
brne rFilter0 cHashFilterNitrogenH 2
l rRatio dFiltration RatioNitrogenInput

# Oxygen
brne rFilter0 cHashFilterOxygen 2
l rRatio dFiltration RatioOxygenInput
brne rFilter0 cHashFilterOxygenH 2
l rRatio dFiltration RatioOxygenInput

# Volatiles
brne rFilter0 cHashFilterVolatiles 2
l rRatio dFiltration RatioVolatilesInput
brne rFilter0 cHashFilterVolatilesH 2
l rRatio dFiltration RatioVolatilesInput

# NitrousOxide
brne rFilter0 cHashFilterNitrousOxide 2
l rRatio dFiltration RatioNitrousOxideInput
brne rFilter0 cHashFilterNitrousOxideH 2
l rRatio dFiltration RatioNitrousOxideInput

# if ratio >= set step into
brlt rRatio cMinRatio 2
move rMode 1

# if ratio < set step into
brge rRatio cMinRatio 2
move rMode 0

jal update_state
yield
j start

update_state:
brdns dPump1 2
s dPump1 On rPump1
brdns dPump2 2
s dPump2 On rPump2

s dFiltration Mode rMode
j ra